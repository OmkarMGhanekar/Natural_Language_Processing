Experiment - 4

Aim :- Apply stemming on the given text

Code:-

-----For English Language-----

from nltk.stem import PorterStemmer
from nltk.tokenize import word_tokenize
import nltk
nltk.download('punkt')
[nltk_data] Downloading package punkt to /root/nltk_data...
[nltk_data]   Unzipping tokenizers/punkt.zip.
True
ps=PorterStemmer()
sentence = "Programmers program with programming languages"
words = word_tokenize(sentence)
for w in words:
    print(w, " : ", ps.stem(w))
Programmers  :  programm
program  :  program
with  :  with
programming  :  program
languages  :  languag


-----For Indian Language-----

hindi.txt :-
?????? ?? ??? ???? ????? ????? ??? ?????? ??, ????? ?????? ??.

Code :-

import codecs
import re

#read the input file
filepath = 'hindi.txt'
f = codecs.open(filepath, encoding = 'utf-8')
text = f.read()


sentences=text.split(u"?") #since hindi sentences end with '|'
words_list = list()
for sentence in sentences:
    words = sentence.split(' ') #words are seperated by a space in hindi
    words_list += words

suffixes = {
    1: [u"?",u"?",u"?",u"?",u"?",u"?",u"?"],
    2: [u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??",u"??"],
    3: [u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???",u"???"],
    4: [u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????",u"????"],
    5: [u"?????",u"?????",u"?????",u"?????",u"?????",u"?????",u"?????"],
} #suffixes tin hindi language that change tense, gender, number but not the meaning

stems=list()
for word in words_list:
    for L in range(1,5): 
        if len(word) >= L + 1:
            for suffix in suffixes[L]:
                if word.endswith(suffix):
                    word=word[:-L] #stripping the suffix from the word
    if word:
        stems.append(word)

filename='stems_generated2.txt'
f=codecs.open(filename,"w",encoding='utf-8') #open in write mode
for stem in stems:
    f.write(str(stem))
    f.write(u"\u0020")
f.close()

Output :-
???? ? ?? ???? ???? ????? ??? ?????? ??, ????? ????? ??. 